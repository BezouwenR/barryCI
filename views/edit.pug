include ./head.pug

// https://getbootstrap.com/docs/3.3/css/#grid-example-basic

.container

  .row
    .col-md-1
    .col-md-10
      if id === undefined
        h2 Creating build.
      else
        h2='Editing ' + repo.name + '.'
      
      .mb-4

      form(method='post')
        if use_id !== undefined
          .form-row
            .form-group
              label Build ID
              input.form-control(type='text', name='id', placeholder='Build ID', readonly, required, value=use_id)
              small.form-text.text-mutedThis ID will be used in the URLs for this build.
        else
          input(type='text', name='id', value=id, hidden)

        .form-row
          .form-group
            label Build name
            input.form-control(type='text', name='name', value=repo.name, placeholder='Build name', required)

        .form-row
          .form-group
            label GitHub Auth Key
            input.form-control(type='password', name='auth', value=repo.github, placeholder='')
            small.form-text.text-mutedThis To be used if you want build status results posted back to GitHub (in real time).

        .form-row
          .form-group
            label Secret
            input.form-control(type='password', name='secret', value=repo.secret, placeholder='')
            small.form-text.text-mutedThis Recommended so no one else can trigger unwanted builds.
        
        hr
        
        .form-row
          .form-group
            label Repo HTTPS clone URL
            input.form-control(type='text', name='clone_url', value=repo.clone_url, placeholder='https://')
            small.form-text.text-mutedThis Paste a link to the HTTPS clone URL to be able to trigger builds from barryCI.

        hr

        .form-row
          .form-group
            .btn-group(role='group')
              a(href='/app/manage', type='button', class='btn btn-default') Cancel
              input(type='submit', class='btn btn-primary', value='Save')
              if id !== undefined
                a(href='/app/delete/' + id, type='button', class='btn btn-danger') Delete

      if id !== undefined
        hr

        h3 Webhook URL
        p This is the URL used for the (push and release only) webhook.
        pre=pushurl

        p
          button.btn.btn-primary(type='button', data-toggle='collapse', data-target='#helpInfo', aria-expanded='false', aria-controls='helpInfo') Setup info
        
        #helpInfo.collapse
          .card.card-body
            h3 Setup file
            p 
              | Each repo can optionally have a 
              code barryci.json
              |  file in the root which will define what happens when build or release happens. 
              | This file contains one large JSON object, with smaller settings. There are two main attributes:

            ul
              li
                code build
                span  contains an array of objects which define the commands to run for the build.
                pre
                  | "build": [{"command": string, "args": string[]}, {"command": string, "args": string[]}]

              li
                code release
                span  contains more attributes to determine what happens when a release is made. 
                b This attribute is optional but is required to create releases.

                ul
                  li
                    code do_build
                    span  determines whether to build before making a release. This attribute is optional and the default is 
                    code true
                    spawn.
                    pre "do_build": true
                  li
                    code post_commands
                    span  is an array of objects which will run after the build and before the upload. This attribute is optional.
                    pre
                      | "post_commands": [{"command": string, "args": string[]}, {"command": string, "args": string[]}]
                  li
                    code upload_file
                    span  is the relative path to the file which will be uploaded (usually generated by the build or commands after the build.) 
                    b This attribute is required for a the release to upload.
                    pre "upload_file": "./release/release.savf"

            h4 Example
            pre.           
              {
                "build": [{
                  "command": "gmake",
                  "args": ["BIN_LIB=ILEUSION"]
                }],
                "release": {
                  "post_commands": [{
                    "command": "gmake",
                    "args": ["release", "BIN_LIB=ILEUSION"]
                  }],
                  "upload_file": "./release/release.savf"
                }
              }

    .col-md-1